{
  "hash": "66264d3cbf602d77008dce9ae446ecc5",
  "result": {
    "engine": "jupyter",
    "markdown": "# Introduction to Python for GIS\n\nPython is one of the most widely used programming languages in the world, and it plays a vital role in Geographic Information Systems (GIS). In ArcGIS, Python is the primary scripting language used to automate workflows, perform geospatial analysis, and extend ArcGIS functionality.  \n\nThis chapter introduces Python in the context of GIS and provides the foundation you need to start writing Python scripts in ArcGIS.\n\n---\n\n## Why Python for ArcGIS?\n\nPython has become the scripting language of choice for ArcGIS because:  \n\n- It is **easy to learn** and beginner-friendly.  \n- It allows **automation** of repetitive tasks.  \n- It provides access to **ArcPy**, a powerful library for geoprocessing.  \n- It integrates well with other Python libraries (`pandas`, `numpy`, `matplotlib`).  \n\nArcGIS Pro comes with its own Python environment, which makes it easy to get started.\n\n---\n\n## Accessing Python in ArcGIS\n\nThere are several ways to use Python with ArcGIS:  \n\n1. **Python Window in ArcGIS Pro**  \n   - A built-in console for running quick Python commands.  \n\n2. **Standalone Python Scripts**  \n   - Create `.py` files and run them inside ArcGIS Pro’s environment.  \n\n3. **Jupyter Notebooks**  \n   - Interactive way of combining code, results, and explanations (what we use here).  \n\n---\n\n## Writing Your First Python Script in ArcGIS\n\nLet’s begin with a simple Python program to print a message.\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nprint(\"Hello, GIS World!\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nHello, GIS World!\n```\n:::\n:::\n\n\n---\n\n## Using Python as a Calculator\n\nPython can also be used like a calculator:\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\na = 10\nb = 5\nsum_ab = a + b\nproduct_ab = a * b\n\nprint(\"Sum:\", sum_ab)\nprint(\"Product:\", product_ab)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSum: 15\nProduct: 50\n```\n:::\n:::\n\n\n---\n\n## Hello ArcPy\n\nTo connect Python with ArcGIS, we import the **ArcPy** module.  \n\n> Note: This code will only work inside the ArcGIS Pro Python environment.\n\n::: {.cell execution_count=3}\n``` {.python .cell-code}\nimport arcpy\n\n# Check ArcPy version\nprint(\"ArcPy is ready! Version:\", arcpy.GetInstallInfo()[\"Version\"])\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nArcPy is ready! Version: 3.4\n```\n:::\n:::\n\n\n---\n\n## Example: List Feature Classes in a Folder\n\nLet’s try a small GIS-related script using ArcPy.\n\n::: {.cell execution_count=4}\n``` {.python .cell-code}\nimport arcpy\n\n# Set workspace (change path to your local GIS data folder)\narcpy.env.workspace = r\"D:\\GIS_Data\\OSM\\shape\"\n\n# List all feature classes\nfeature_classes = arcpy.ListFeatureClasses()\n\nprint(\"Feature Classes in workspace:\")\nfor fc in feature_classes:\n    print(\"-\", fc)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nFeature Classes in workspace:\n- buildings.shp\n- landuse.shp\n- natural.shp\n- places.shp\n- points.shp\n- railways.shp\n- roads.shp\n- roads_utm44n.shp\n- waterways.shp\n```\n:::\n:::\n\n\n---\n\n## Visual Guide: Ways to Use Python in ArcGIS\n\n```{mermaid}\nflowchart TD\n    A[\"Python Window (ArcGIS Pro)\"] --> D[\"Use Python for quick tasks\"]\n    B[\"Standalone Scripts (.py)\"] --> D\n    C[\"Notebooks (Jupyter / Quarto)\"] --> D\n    D[\"Automate & Analyze GIS Data with ArcPy\"]\n```\n\n---\n\n## Summary\n\nIn this chapter, we learned:  \n- Why Python is important for ArcGIS.  \n- Different ways to use Python in ArcGIS.  \n- How to write a simple Python script.  \n- How to connect to ArcPy and list GIS datasets.  \n\n---\n\n## Exercise\n\nTry the following tasks on your own:  \n\n1. Write a Python script that multiplies two numbers and prints the result.  \n2. Modify the ArcPy script above to set your own folder path and list feature classes.  \n3. Run the `arcpy.GetInstallInfo()` command and note down your ArcGIS version.  \n\n---\n\n",
    "supporting": [
      "chapter1_intro_python_gis_files\\figure-pdf"
    ],
    "filters": []
  }
}